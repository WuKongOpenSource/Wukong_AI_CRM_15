services:
  mysql:
    #华为云的docker镜像加速
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/mysql/mysql-server:8.0.32
    container_name: mysql
    volumes:
      - ./mysql/my.cnf:/etc/my.cnf
      - ../DB:/docker-entrypoint-initdb.d/
      - ./mysql/DB:/docker-entrypoint-initdb.d/
      - ./volumes/mysql/data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-wukongCrm@2025}
      MYSQL_ROOT_HOST: "%"
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    restart: always
    command: >
      bash -c "chmod 644 /etc/my.cnf && exec /entrypoint.sh mysqld --lower_case_table_names=1"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost"
        ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 60s
    networks:
      - kaka
  redis:
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/redis:7.0.4
    restart: always
    environment:
      REDISCLI_AUTH: ${REDIS_PASSWORD:-123456}
    volumes:
      - ./volumes/redis/data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-123456}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli -a ${REDIS_PASSWORD:-123456} ping | grep -q PONG",
        ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    networks:
      - kaka
  minio:
    container_name: minio
    restart: always
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/minio/minio:RELEASE.2024-10-02T17-50-41Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_DOMAIN: minio
    volumes:
      - ./volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 60s
    networks:
      - kaka
  minio-init:
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/quay.io/minio/mc:RELEASE.2024-11-21T17-21-54Z
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 10 && \
      mc alias set kaka http://minio:9000 minioadmin minioadmin && \
      mc anonymous set download kaka/wukong-public || true"
    networks:
      - kaka
    restart: "no"
  elasticsearch:
    #image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    restart: always
    volumes:
      # 国内下载es插件太慢，直接使用已经下载好的
      #- ./elasticsearch/docker-entrypoint.sh:/docker-entrypoint-mount.sh
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins
    environment:
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD:-c6oRpADe1SW304zDjqKlNst0}
      cluster.name: es-cluster
      node.name: es0
      discovery.type: single-node
      xpack.license.self_generated.type: basic
      xpack.security.enabled: "true"
      xpack.security.enrollment.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
    ports:
      - ${ELASTICSEARCH_PORT:-9200}:9200
    deploy:
      resources:
        limits:
          memory: 2g
    #entrypoint: ["sh", "-c", "sh /docker-entrypoint-mount.sh"]
    healthcheck:
      test:
        ["CMD", "curl", "-s", "http://localhost:9200/_cluster/health?pretty"]
      interval: 30s
      timeout: 10s
      retries: 50
      start_period: 120s
    networks:
      - kaka
  wk_crm:
    image: wuknogcrm-registry.cn-beijing.cr.aliyuncs.com/wukongcrm/wk_crm:20251015
    platform: linux/amd64
    container_name: wk_crm
    restart: always
    volumes:
      - ./volumes/wukong/logs:/opt/wk_boot/logs
      - ./volumes/wukong/config:/opt/wk_boot/config
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - LANG=zh_CN.UTF-8
      - LANGUAGE=zh_CN:zh
      - LC_ALL=zh_CN.UTF-8
    networks:
      - kaka
  nginx:
    container_name: nginx
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/nginx:latest
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/cert:/etc/nginx/cert
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-_}
      NGINX_PORT: ${NGINX_PORT:-80}
    ports:
      - '80:80'
    networks:
      - kaka
networks:
  kaka:
    driver: bridge
